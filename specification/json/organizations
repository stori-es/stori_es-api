{
  "apiVersion": 1,
  "swaggerVersion": 1.2,
  "basePath": "http://www.stori.es/api/website/listings",
  "description": "Operations for organizations",
  "resourcePath": "/organizations",
  "produces": [
    "application/vnd.api+json"
  ],
  "consumes": [
    "application/vnd.api+json"
  ],
  "apis": [
    {
      "path": "/organizations",
      "operations": [
        {
          "method": "POST",
          "summary": "Create a new organization",
          "notes": "Creates a new organization and returns it. Declares the resource URL in the <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.30\" title=\"HTTP 1.1 Header Fields - Location\">HTTP Location header</a>.",
          "type": "ApiResponse",
          "nickname": "create_organization",
          "parameters": [
            {
              "name": "body",
              "description": "The new organization to be created",
              "required": true,
              "type": "OrganizationPost",
              "paramType": "body"
            }
          ],
          "responseMessages": [
            {
              "code": 201,
              "message": "Resource successfully created",
              "responseModel": "ApiResponse"
            },
            {
              "code": 400,
              "message": "Invalid input",
              "responseModel": "ApiResponse"
            },
            {
              "code": 403,
              "message": "Not authorized to create the requested resource",
              "responseModel": "ApiResponse"
            },
            {
              "code": 503,
              "message": "Service is currently unavailable",
              "responseModel": "ApiResponse"
            }
          ]
        }
      ]
    },
    {
      "path": "/organizations/{organization_id}",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieve a specific organization",
          "notes": "Returns a specific organization accessible to the current user",
          "type": "ApiResponse",
          "nickname": "get_organization",
          "parameters": [
            {
              "name": "organization_id",
              "description": "The ID of the organization to retrieve",
              "required": true,
              "type": "string",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "Resource successfully retrieved",
              "responseModel": "ApiResponse"
            },
            {
              "code": 403,
              "message": "Not authorized to access the requested resource",
              "responseModel": "ApiResponse"
            },
            {
              "code": 404,
              "message": "Resource not found",
              "responseModel": "ApiResponse"
            },
            {
              "code": 503,
              "message": "Service is currently unavailable",
              "responseModel": "ApiResponse"
            }
          ]
        },
        {
          "method": "DELETE",
          "summary": "Deletes an organization",
          "notes": "Deletes an organization owned by the current user",
          "type": "void",
          "nickname": "delete_organization",
          "parameters": [
            {
              "name": "organization_id",
              "description": "The ID of the organization to delete",
              "required": true,
              "type": "string",
              "paramType": "path"
            }
          ],
          "responseMessages": [
            {
              "code": 204,
              "message": "Resource successfully deleted"
            },
            {
              "code": 403,
              "message": "Not authorized to delete the requested resource",
              "responseModel": "ApiResponse"
            },
            {
              "code": 404,
              "message": "Resource not found",
              "responseModel": "ApiResponse"
            },
            {
              "code": 503,
              "message": "Service is currently unavailable",
              "responseModel": "ApiResponse"
            }
          ]
        },
        {
          "method": "PATCH",
          "summary": "Updates an organization",
          "notes": "Updates an organization administered by the current user",
          "type": "ApiResponse",
          "nickname": "update_organization",
          "consumes": [
            "application/json-patch+json"
          ],
          "parameters": [
            {
              "name": "organization_id",
              "description": "The ID of the organization to update",
              "required": true,
              "type": "string",
              "paramType": "path"
            },
            {
              "name": "body",
              "description": "Requested modifications in JSON Patch format (see <a href=\"http://tools.ietf.org/html/rfc6902\" title=\"RFC6902 - JSON Patch\">RFC6902</a> and <a href=\"http://jsonapi.org/format/#updating-a-document\" title=\"JSON API - Updating a Document (PATCH)\">JSON API</a>)",
              "required": true,
              "type": "PatchOperations",
              "paramType": "body"
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "Resource successfully updated",
              "responseModel": "ApiResponse"
            },
            {
              "code": 400,
              "message": "Invalid input",
              "responseModel": "ApiResponse"
            },
            {
              "code": 403,
              "message": "Not authorized to update the requested resource",
              "responseModel": "ApiResponse"
            },
            {
              "code": 404,
              "message": "Resource not found",
              "responseModel": "ApiResponse"
            },
            {
              "code": 503,
              "message": "Service is currently unavailable",
              "responseModel": "ApiResponse"
            }
          ]
        }
      ]
    }
  ],
  "models": {
    "Organization": {
      "id": "Organization",
      "description": "The representation of an organization on the stori.es platform",
      "required": [
        "id",
        "title"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID for this entity"
        },
        "title": {
          "type": "string",
          "description": "The title of this entity"
        },
        "path": {
          "type": "string",
          "description": "The URL path fragment associated with this entity; its namespace"
        },
        "permalink": {
          "type": "string",
          "description": "The URL of this entity on the stori.es platform"
        },
        "default_theme_id": {
          "type": "integer",
          "format": "int64",
          "description": "The ID of the default theme for this entity",
          "minimum": 1,
          "defaultValue": 1
        },
        "note_ids": {
          "type": "array",
          "description": "The IDs of notes associated with this entity",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "link_ids": {
          "type": "array",
          "description": "The IDs of links associated with this entity",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "permission_ids": {
          "type": "array",
          "description": "The IDs of permission documents associated with this entity",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "ApiResponse": {
      "id": "ApiResponse",
      "description": "The representation of a stori.es API error",
      "required": [
        "http_status_code",
        "error_code",
        "summary"
      ],
      "properties": {
        "http_status_code": {
          "type": "integer",
          "format": "int64",
          "description": "The HTTP status code"
        },
        "error_code": {
          "type": "string",
          "description": "The stori.es internal error code"
        },
        "summary": {
          "type": "string",
          "description": "A brief summary of the error encountered"
        },
        "detail_url": {
          "type": "string",
          "description": "A URL for developers containing more detail about the error"
        }
      }
    }
  }
}