{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "stori.es API",
    "description": "The stori.es API provides a programmatic interface to the stori.es platform.",
    "contact": {
      "name": "API Support",
      "email": "info@stori.es",
      "url": "http://www.stori.es/support"
    },
    "license": {
      "name": "stori.es Software as a Service Agreement",
      "url": "http://www.stori.es/software-as-a-service-agreement"
    },
    "termsOfService": "http://www.stori.es/terms-of-service"
  },
  "host": "stori.es",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "paths": {
    "/documents": {
      "post": {
        "summary": "Create a new document",
        "description": "",
        "operationId": "create_document",
        "consumes": [
          "application/vnd.api+json"
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The new document to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource successfully created",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "401": {
            "description": "Not authorized to create the requested resource",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    },
    "/documents/{document_id}": {
      "get": {
        "summary": "Retrieve a specific document",
        "description": "",
        "operationId": "get_document",
        "consumes": [
          "application/vnd.api+json"
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "document_id",
            "description": "The ID of the document to retrieve",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource successfully retrieved",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "401": {
            "description": "Not authorized to access the requested resource",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a document",
        "description": "",
        "operationId": "delete_document",
        "consumes": [
          "application/vnd.api+json"
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "in": "path",
            "description": "The ID of the document to delete",
            "name": "document_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Resource successfully deleted",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "401": {
            "description": "Not authorized to delete the requested resource",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      },
      "put": {
        "summary": "Update a document",
        "description": "",
        "operationId": "update_document",
        "consumes": [
          "application/vnd.api+json"
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "document_id",
            "description": "The ID of the document to update",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The modified document",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource successfully updated",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "401": {
            "description": "Not authorized to update the requested resource",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "503": {
            "description": "Service is currently unavailable",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Sort": {
      "id": "Sort",
      "description": "Sort order details indexed by resource name",
      "required": [
        "documents"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "Sort order for document resources",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Navigation": {
      "id": "Navigation",
      "description": "Navigation details for this response",
      "properties": {
        "first": {
          "type": "string",
          "description": "URL for first set of results"
        },
        "prev": {
          "type": "string",
          "description": "URL for previous set of results"
        },
        "next": {
          "type": "string",
          "description": "URL for next set of results"
        },
        "last": {
          "type": "string",
          "description": "URL for last set of results"
        }
      }
    },
    "Pagination": {
      "id": "Pagination",
      "description": "Pagination details for this response",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of results to return (default = 8, maximum = 50)",
          "minimum": 1,
          "maximum": 50,
          "default": 8
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Starting index, 0-based (default = 0)",
          "minimum": 0,
          "defaultValue": 0
        },
        "sort": {
          "description": "Sort order, indexed by resource",
          "$ref": "#/definitions/Sort"
        },
        "navigation": {
          "description": "Navigation details for this response",
          "$ref": "#/definitions/Navigation"
        }
      }
    },
    "Message": {
      "id": "Message",
      "description": "A message generated by a request",
      "required": [
        "summary",
        "message_code"
      ],
      "properties": {
        "target": {
          "type": "string",
          "description": "Target of this message (field, object, etc.)"
        },
        "summary": {
          "type": "string",
          "description": "Message summary"
        },
        "message_code": {
          "type": "string",
          "description": "stori.es internal message code"
        },
        "detail_url": {
          "type": "string",
          "description": "URL for message details"
        }
      }
    },
    "Metadata": {
      "id": "Metadata",
      "description": "Metadata about this response",
      "required": [
        "self",
        "http_code",
        "status"
      ],
      "properties": {
        "self": {
          "type": "string",
          "description": "Full request URL"
        },
        "status": {
          "type": "string",
          "description": "High-level status of response",
          "enum": [
            "success",
            "fail",
            "error"
          ]
        },
        "http_code": {
          "type": "integer",
          "description": "HTTP response status code"
        },
        "messages": {
          "type": "array",
          "description": "Array of messages generated by request",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "pagination": {
          "$ref": "#/definitions/Pagination",
          "description": "Pagination details for this response"
        }
      }
    },
    "ResourceLink": {
      "id": "ResourceLink",
      "description": "Metadata describing a resource",
      "required": [
        "href"
      ],
      "properties": {
        "href": {
          "type": "string",
          "description": "The URL of the resource"
        }
      }
    },
    "ResourceLinks": {
      "id": "ResourceLinks",
      "description": "Metadata describing associated resources",
      "required": [
        "entity",
        "theme",
        "creator",
        "owner"
      ],
      "properties": {
        "entity": {
          "$ref": "#/definitions/ResourceLink",
          "description": "Metadata describing the entity this document is associated with"
        },
        "source": {
          "$ref": "#/definitions/ResourceLink",
          "description": "Metadata describing the source this document is associated with (e.g.: an attachment's URL; a response's form document)"
        },
        "theme": {
          "$ref": "#/definitions/ResourceLink",
          "description": "Metadata describing the theme associated with this entity"
        },
        "permission": {
          "$ref": "#/definitions/ResourceLink",
          "description": "Metadata describing the permission associated with this entity"
        },
        "creator": {
          "$ref": "#/definitions/ResourceLink",
          "description": "Metadata describing the creator of this entity"
        },
        "owner": {
          "$ref": "#/definitions/ResourceLink",
          "description": "Metadata describing the owner of this entity"
        },
        "administrators": {
          "type": "array",
          "description": "Metadata describing the administrators of this entity",
          "items": {
            "$ref": "#/definitions/ResourceLink"
          }
        }
      }
    },
    "Block": {
      "id": "Block",
      "description": "The representation of a block on the stori.es platform",
      "required": [
        "id",
        "path_segment",
        "block_type",
        "is_question",
        "links",
        "created_on",
        "updated_on"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique ID for this entity"
        },
        "path_segment": {
          "type": "string",
          "description": "The URL path segment uniquely identifying this block; defaults to URL-encoded title; generated if undefined"
        },
        "title": {
          "type": "string",
          "description": "The title of this entity"
        },
        "block_type": {
          "type": "string",
          "description": "The type of block this entity represents",
          "enum": [
            "/block_types/text",
            "/block_types/document",
            "/block_types/image",
            "/block_types/audio",
            "/block_types/video",
            "/block_types/collection",
            "/block_types/permission",
            "/block_types/story_title",
            "/block_types/story_ask",
            "/block_types/first_name",
            "/block_types/last_name",
            "/block_types/email",
            "/block_types/phone",
            "/block_types/street_address",
            "/block_types/city",
            "/block_types/state",
            "/block_types/zip_code",
            "/block_types/updates_opt_in",
            "/block_types/preferred_email_format",
            "/block_types/text_field",
            "/block_types/text_area",
            "/block_types/single_choice",
            "/block_types/multiple_choice",
            "/block_types/date",
            "/block_types/attachments"
          ]
        },
        "value": {
          "type": "string",
          "description": "The current value of this block, a JSON data structure unique to each block type (TBD)"
        },
        "is_question": {
          "type": "boolean",
          "description": "Boolean flag indicating this block solicits responses"
        },
        "links": {
          "$ref": "#/definitions/ResourceLinks",
          "description": "Metadata describing resources associated with this entity"
        },
        "created_on": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date and time for this entity, normalized to UTC (see [RFC3339](http://tools.ietf.org/html/rfc3339))"
        },
        "updated_on": {
          "type": "string",
          "format": "date-time",
          "description": "The most recent modification date and time for this entity, normalized to UTC (see [RFC3339](http://tools.ietf.org/html/rfc3339))"
        }
      }
    },
    "Document": {
      "id": "Document",
      "description": "The representation of a document on the stori.es platform",
      "required": [
        "id",
        "document_type",
        "byline",
        "links",
        "created_on",
        "updated_on",
        "publication_status"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique ID for this entity"
        },
        "document_type": {
          "type": "string",
          "description": "The type of document",
          "enum": [
            "/document_types/attachment",
            "/document_types/content",
            "/document_types/form",
            "/document_types/note",
            "/document_types/response"
          ]
        },
        "title": {
          "type": "string",
          "description": "The title of this entity"
        },
        "byline": {
          "type": "string",
          "description": "The byline of this entity; defaults to [Owner Given Name] of [Owner City], [Owner State]"
        },
        "blocks": {
          "type": "array",
          "description": "The set of blocks that compose this document",
          "items": {
            "$ref": "#/definitions/Block"
          }
        },
        "links": {
          "$ref": "#/definitions/ResourceLinks",
          "description": "Metadata describing resources associated with this entity"
        },
        "created_on": {
          "type": "string",
          "format": "date-time",
          "description": "The creation date and time for this entity, normalized to UTC (see [RFC3339](http://tools.ietf.org/html/rfc3339))"
        },
        "updated_on": {
          "type": "string",
          "format": "date-time",
          "description": "The most recent modification date and time for this entity, normalized to UTC (see [RFC3339](http://tools.ietf.org/html/rfc3339))"
        },
        "publication_status": {
          "type": "string",
          "description": "The current publication status of this entity",
          "enum": [
            "draft",
            "published"
          ]
        },
        "published_on": {
          "type": "string",
          "format": "date-time",
          "description": "The initial publication date and time for this entity, normalized to UTC (see [RFC3339](http://tools.ietf.org/html/rfc3339))"
        }
      }
    },
    "ApiResponse": {
      "id": "ApiResponse",
      "description": "The standard API response format for the stori.es platform; follows the [JSON API](http://jsonapi.org) standard",
      "required": [
        "meta",
        "documents"
      ],
      "properties": {
        "meta": {
          "$ref": "#/definitions/Metadata",
          "description": "Metadata describing this response"
        },
        "documents": {
          "type": "array",
          "description": "Array of requested document resources",
          "items": {
            "$ref": "#/definitions/Document"
          }
        }
      }
    },
    "DocumentPost": {
      "id": "DocumentPost",
      "description": "The representation of a new document to be added to the stori.es platform",
      "required": [
        "document_type"
      ],
      "properties": {
        "document_type": {
          "type": "string",
          "description": "The type of document",
          "enum": [
            "/document_types/attachment",
            "/document_types/content",
            "/document_types/form",
            "/document_types/note",
            "/document_types/response"
          ]
        },
        "title": {
          "type": "string",
          "description": "The title of this entity"
        },
        "byline": {
          "type": "string",
          "description": "The byline of this entity; defaults to [Owner Given Name] of [Owner City], [Owner State]"
        },
        "blocks": {
          "type": "array",
          "description": "The set of blocks that compose this document",
          "items": {
            "$ref": "#/definitions/Block"
          }
        },
        "entity_id": {
          "type": "integer",
          "description": "The ID of the entity this document is associated with"
        },
        "source_url": {
          "type": "string",
          "description": "The URL of the source this document is associated with (e.g.: an attachment's URL; a response's form document)"
        },
        "theme_id": {
          "type": "integer",
          "description": "The ID of the theme associated with this entity"
        },
        "permission_id": {
          "type": "integer",
          "description": "The ID of the permission associated with this entity"
        }
      }
    }
  }
}
